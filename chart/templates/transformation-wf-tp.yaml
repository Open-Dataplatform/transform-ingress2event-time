apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: {{ .Values.appName }}-wf-tp
  namespace: argo
spec:
  entrypoint: transformation
  templates:
  - name: transformation
    volumes:
      - name: transformation-cm
        configMap:
          name: {{ .Values.appName }}-cm
    metadata:
      annotations:
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/role: "{{ .Values.appName }}-authentication-reader"
        vault.hashicorp.com/auth-path: "auth/kubernetes-{{ .Values.environment }}"
        vault.hashicorp.com/agent-inject-secret-azureauth.ini: "{{ .Values.appName }}-authentication/data/credentials"
        vault.hashicorp.com/agent-inject-template-azureauth.ini: |
          {{`{{- with secret "{{ .Values.appName }}-authentication/data/credentials" -}}
              [Authentication]
              authority = {{ .Data.data.authority }}
              client_id = {{ .Data.data.client_id }}
              secret = {{ .Data.data.secret }}
              {{- end -}}`}}
    inputs:
      parameters:
      - name: date-string
        default: ''
    container:
      image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
      workingDir: /app
      command: ["python", "-m", "transform_ingress2event_time/transform", "{{`{{inputs.parameters.date-string}}`}}"]
      volumeMounts:
        - name: transformation-cm
          mountPath: "/etc/osiris/"
          readOnly: true
